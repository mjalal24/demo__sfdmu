name: SF CLI Cache Example

on:
  push: {}

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository (if needed)
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      # Step 3: Configure a custom global npm directory
      - name: Configure npm Global Directory
        run: |
          mkdir -p $HOME/.npm-global
          npm config set prefix "$HOME/.npm-global"

      # Step 4: Add the npm global directory to the PATH
      - name: Add npm Global to PATH
        run: echo "$HOME/.npm-global/bin" >> $GITHUB_PATH

      # Step 5: Create a file containing the desired SF CLI version
      - name: Set SF CLI Version File
        id: sfcli_version
        run: echo "$(npm info @salesforce/cli version)" > sf-cli-version.txt

      # Step 6: Cache the Salesforce CLI installation directory using the version file as part of the key
      - name: Cache Salesforce CLI
        id: cache-sfcli
        uses: actions/cache@v3
        with:
          path: $HOME/.npm-global
          key: ${{ runner.os }}-sfcli-${{ hashFiles('sf-cli-version.txt') }}
          restore-keys: |
            ${{ runner.os }}-sfcli-

      # Step 7: Check and display cache status
      - name: Check SF CLI Cache Status
        run: |
          if [ "${{ steps.cache-sfcli.outputs.cache-hit }}" = "true" ]; then
            echo "SF CLI installation found in cache."
          else
            echo "SF CLI installation not found in cache."
          fi

      # Step 8: Install Salesforce CLI if cache was not hit
      - name: Install Salesforce CLI
        if: steps.cache-sfcli.outputs.cache-hit != 'true'
        run: |
          echo "Installing Salesforce CLI..."
          npm install @salesforce/cli --global

      # Step 9: Verify the Salesforce CLI installation
      - name: Verify Salesforce CLI Installation
        run: sf --version
