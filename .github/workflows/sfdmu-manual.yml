name: Custom SF CLI Delta Generation Workflow

on:
  push:
    branches:
      - main

jobs:
  generate-delta:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository (includes Dockerfile).
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Cache the custom Docker image as a tar file.
      - name: Cache Custom Docker Image
        id: cache-docker
        uses: actions/cache@v3
        with:
          path: custom-sf.tar
          key: custom-sf-image

      # 3. Load the cached image if available; otherwise, build it.
      - name: Load or Build Custom Docker Image
        run: |
          if [ -f custom-sf.tar ]; then
            echo "Cached Docker image found. Loading image..."
            docker load -i custom-sf.tar
          else
            echo "No cached image found. Building custom Docker image..."
            docker build -t custom-sf:latest .
            docker save custom-sf:latest -o custom-sf.tar
          fi

      # 4. Generate the delta manifest.
      - name: Generate Delta Manifest Using sfdx-git-delta
        run: |
          # Ensure output directories exist.
          mkdir -p package destructiveChanges
          # Run the container with the repository mounted.
          docker run --rm \
            -v "$PWD":/workspace \
            -w /workspace \
            custom-sf:latest \
            sh -c "sf sgd source delta --to HEAD --from HEAD~1 --output-dir ."
          
          # Display the generated artifacts.
          echo "Generated package/package.xml:"
          cat package/package.xml || echo "package.xml not found."
          echo ""
          echo "Generated destructiveChanges/destructiveChanges.xml:"
          cat destructiveChanges/destructiveChanges.xml || echo "destructiveChanges.xml not found."
