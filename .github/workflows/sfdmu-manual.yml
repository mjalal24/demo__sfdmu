name: Custom SF CLI Delta Generation Workflow

on:
  push:
    branches:
      - main

jobs:
  generate-delta:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository with full Git history.
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This fetches the complete Git history.

      # Step 2: Explicitly fetch all remote branches so that references like origin/development exist.
      - name: Fetch Remote Branches
        run: git fetch --all

      # (Optional) Verify that the Git references exist.
      - name: Verify Git References
        run: |
          echo "Current commit (HEAD):"
          git rev-parse HEAD
          echo "Remote branch 'origin/development' commit:"
          git rev-parse origin/development || echo "origin/development not found"

      # Step 3: Cache the custom Docker image as a tar file.
      - name: Cache Custom Docker Image
        id: cache-docker
        uses: actions/cache@v3
        with:
          path: custom-sf.tar
          key: custom-sf-image

      # Step 4: Load the cached image if available; otherwise, build it.
      - name: Load or Build Custom Docker Image
        run: |
          if [ -f custom-sf.tar ]; then
            echo "Cached Docker image found. Loading image..."
            docker load -i custom-sf.tar
          else
            echo "No cached image found. Building custom Docker image..."
            docker build -t custom-sf:latest .
            docker save custom-sf:latest -o custom-sf.tar
          fi

      # Step 5: Generate the delta manifest.
      - name: Generate Delta Manifest Using sfdx-git-delta
        run: |
          # Ensure output directories exist.
          mkdir -p package destructiveChanges
          # Run the container with the repository mounted.
          # Compare the current commit (HEAD) with the remote branch "origin/development".
          docker run --rm \
            -v "$PWD":/workspace \
            -w /workspace \
            custom-sf:latest \
            sh -c "sf sgd source delta --to "o HEAD" --from "HEAD^" --output-dir ."
          
          # Display the generated artifacts.
          echo "Generated package/package.xml:"
          cat package/package.xml || echo "package.xml not found."
          echo ""
          echo "Generated destructiveChanges/destructiveChanges.xml:"
          cat destructiveChanges/destructiveChanges.xml || echo "destructiveChanges.xml not found."
